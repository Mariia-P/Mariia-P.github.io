{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/img.jpg","components/dishView/DishView.js","components/spinner/Spinner.js","services/RecipesService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomDish/RandomDish.js","components/dishItem/DishItem.js","components/dishList/DishList.js","components/skeleton/Skeleton.js","components/dishInfo/DishInfo.js","components/errorBoundary/ErrorBoundary.js","components/addDishButton/AddDishButton.js","resources/times-circle-regular.svg","components/modalWindow/ModalWindow.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","DishView","dish","name","description","thumb","ingridients","moreDescription","useState","btnText","setBtnText","readMoreButton","onClick","prevText","imgUrl","decoration","ingridientsList","map","el","idx","itemInfo","validDescription","src","alt","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RecipesService","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","getRecipe","_transformRecipe","meals","meal","key","includes","numberOfIngridient","slice","meshureKey","push","strMeal","strInstructions","strMealThumb","id","idMeal","ErrorMessage","objectFit","img","RandomDish","props","recipiesService","onDishLoading","setState","newItemLoading","onDishLoaded","loading","isLike","onError","e","console","log","error","updateDish","then","catch","state","handleClick","onAdd","this","errorMessage","spinner","content","likedDishStyle","disabled","Component","DishItem","onDishSelected","onDelete","cuttedName","tabIndex","DishList","dishes","activeCountOfPostSets","setactiveCountOfPostSets","items","setItems","useEffect","newItems","prevItems","showMore","prevValue","elements","ReadMoreButton","Content","length","noContent","Skeleton","View","item","DishInfo","skeleton","ErrorBoundary","errorInfo","children","AddDishButton","setActive","ModalWindow","active","uuidv4","newDish","setNewDish","ingridient","setIngridient","lastIngridient","setLastIngridient","valid","setValid","setEmptyNewDish","validateField","string","test","showErrorMassage","succseecFullForm","prev","concat","onValueChange","target","value","title","stopPropagation","icon","action","placeholder","required","onChange","autoComplete","htmlFor","cols","rows","preventDefault","App","savedFavourite","localStorage","getItem","JSON","parse","selectedRecipie","setselectedRecipie","favouriteDishes","setfavouriteDishes","modalActive","setModalActive","setItem","stringify","addDish","newItem","prevDish","path","element","filter","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59dbbd94.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <span>Recipies</span> information app\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Ramdom dish</Link>\n                    </li>\n                    /\n                    <li>\n                        <Link to=\"/favourites\">Favourites</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/img.0c87aba5.jpg\";","import { useState } from 'react';\n\nimport './dishView.scss';\nimport decoration from '../../resources/img/img.jpg';\n\nconst DishView = ({ dish }) => {\n    const { name, description, thumb, ingridients, moreDescription } = dish;\n    const [btnText, setBtnText] = useState('Read More');\n\n    const hendleReadBtnClick = () => {\n        setBtnText(prevText =>\n            prevText === 'Read More' ? 'Read Less' : 'Read More'\n        );\n    };\n\n    const readMoreButton = moreDescription ? (\n        <button\n            onClick={hendleReadBtnClick}\n            className=\"randomdish__button-more\"\n        >\n            {btnText}\n        </button>\n    ) : null;\n    \n    const imgUrl = thumb ? thumb : decoration;\n    const ingridientsList = ingridients.map((el, idx) => {\n        // const { ingridient, meshure } = el;\n        const itemInfo = ` ${idx + 1} ${el} `;\n        return (\n            <li key={idx} className=\"randomdish__ingridient-item\">\n                {itemInfo}\n            </li>\n        );\n    });\n\n    const validDescription =\n        btnText === 'Read More'\n            ? description\n            : `${description} +' '+ ${moreDescription}`;\n    return (\n        <>\n            <div className=\"randomdish__top-wrapper\">\n                <img\n                    src={imgUrl}\n                    alt=\"image of dish\"\n                    className=\"randomdish__img\"\n                />\n                <ul className=\"randomdish__ingridient-list\">\n                    {ingridientsList}\n                </ul>\n            </div>\n\n            <div className=\"randomdish__info\">\n                <h2>{name}</h2>\n                <p>{validDescription}</p>\n                {readMoreButton}\n            </div>\n        </>\n    );\n};\n\nexport default DishView;\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","class RecipesService {\r\n    _apiBase = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\n\r\n    getResource = async url => {\r\n        let res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    getRecipe = async () => {\r\n        const res = await this.getResource(this._apiBase);\r\n        return this._transformRecipe(res.meals[0]);\r\n    };\r\n\r\n    _transformRecipe = meal => {\r\n        const ingridients = [];\r\n        for (const key in meal) {\r\n            if (key.includes('strIngredient') && meal[key]) {\r\n                let numberOfIngridient = key.slice(13);\r\n                let meshureKey = `strMeasure${numberOfIngridient}`;\r\n                ingridients.push(`${meal[key]} - ${meal[meshureKey]}`);\r\n            }\r\n        }\r\n\r\n        return {\r\n            name: meal.strMeal,\r\n            description: meal.strInstructions.slice(0, 450),\r\n            moreDescription: meal.strInstructions.slice(450),\r\n            thumb: meal.strMealThumb,\r\n            ingridients,\r\n            id: meal.idMeal\r\n        };\r\n    };\r\n}\r\n\r\nexport default RecipesService;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nexport const ErrorMessage = () => {\r\n    return (\r\n        <img\r\n            style={{\r\n                display: 'block',\r\n                width: '250px',\r\n                height: '250px',\r\n                objectFit: 'contain',\r\n                margin: '0 auto'\r\n            }}\r\n            src={img}\r\n            alt=\"Error\"\r\n        />\r\n    );\r\n};\r\n","import { Component } from 'react';\n\nimport DishView from '../dishView/DishView';\nimport Spinner from '../spinner/Spinner';\nimport RecipesService from '../../services/RecipesService';\nimport { ErrorMessage } from '../errorMessage/ErrorMessage';\n\nimport './randomDish.scss';\n\nclass RandomDish extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dish: {},\n            loading: true,\n            error: false,\n            newItemLoading: false,\n            isLike: false\n        };\n\n        this.handleClick = () => {\n            if (this.state.isLike) {\n                return;\n            }\n            this.setState({\n                isLike: true\n            });\n            this.props.onAdd(this.state.dish);\n        };\n    }\n\n    recipiesService = new RecipesService();\n\n    componentDidMount() {\n        this.updateDish();\n    }\n    onDishLoading = () => {\n        this.setState({\n            newItemLoading: true\n        });\n    };\n\n    onDishLoaded = dish => {\n        this.setState({\n            dish,\n            loading: false,\n            newItemLoading: false,\n            isLike: false\n        });\n    };\n\n    onError = e => {\n        console.log('[e]', e);\n        this.setState({ loading: false, error: true });\n    };\n\n    updateDish = () => {\n        this.onDishLoading();\n        this.setState({ loading: true });\n\n        this.recipiesService\n            .getRecipe()\n            .then(this.onDishLoaded)\n            .catch(this.onError);\n    };\n\n    render() {\n        const { dish, loading, error, newItemLoading, isLike } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? (\n            <div className=\"randomdish__spinner-wrapper\">\n                <Spinner />\n            </div>\n        ) : null;\n        const content = !(loading || error) ? <DishView dish={dish} /> : null;\n        const likedDishStyle = isLike\n            ? 'randomdish randomdish__shadow-red'\n            : 'randomdish';\n\n        return (\n            <div className={likedDishStyle}>\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomdish__btns\">\n                    <button\n                        type=\"submit\"\n                        onClick={this.handleClick}\n                        className=\"button button__main\"\n                    >\n                        <div className=\"inner\">Like</div>\n                    </button>\n                    <button\n                        disabled={newItemLoading}\n                        onClick={this.updateDish}\n                        className=\"button button__secondary\"\n                    >\n                        <div className=\"inner\">Next</div>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RandomDish;\n","import './dishItem.scss';\r\n\r\nconst DishItem = props => {\r\n   \r\nconst { name, id, onDishSelected, thumb, onDelete } = props;\r\nconst cuttedName= name.slice(0, 15);\r\n\r\n        return (\r\n            <li key={id} className=\"dish__item\" tabIndex=\"0\">\r\n                <img src={thumb} alt={name} onClick={onDishSelected} />\r\n                <div className=\"dish__info-wrapper\">\r\n                    <div className=\"dish__name\">{cuttedName}...</div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm \"\r\n                        onClick={onDelete}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n   \r\n};\r\nexport default DishItem;\r\n","import { useState, useEffect } from 'react';\n\nimport DishItem from '../dishItem/DishItem';\n\nimport './dishList.scss';\n\nconst DishList = ({ dishes, onDelete, onDishSelected }) => {\n    const [activeCountOfPostSets, setactiveCountOfPostSets] = useState(1);\n    const [items, setItems] = useState([]);\n    const amountItemsInSet = 3;\n    \n    useEffect(() => {\n        const newItems = dishes.slice(\n            (activeCountOfPostSets - 1) * amountItemsInSet,\n            (activeCountOfPostSets - 1) * amountItemsInSet + amountItemsInSet\n        );\n        setItems(prevItems => [...prevItems, ...newItems]);\n    }, [activeCountOfPostSets]);\n\n    useEffect(() => {\n        const newItems = dishes.slice(\n            0,\n            (activeCountOfPostSets - 1) * amountItemsInSet + amountItemsInSet\n        );\n        setItems([...newItems]);\n    }, [dishes]);\n\n    const showMore = () => {\n        setactiveCountOfPostSets(prevValue => prevValue + 1);\n    };\n    const elements = items.map(({ name, thumb, id }) => {\n        return (\n            <DishItem\n                key={id}\n                name={name}\n                thumb={thumb}\n                onDishSelected={() => onDishSelected(id)}\n                onDelete={() => onDelete(id)}\n            />\n        );\n    });\n\n    const ReadMoreButton = () => (\n        <button className=\"button button__main button__long\" onClick={showMore}>\n            <div className=\"inner\">Show more</div>\n        </button>\n    );\n\n    const Content = () => (\n        <>\n            <ul className=\"dish__grid\">{elements}</ul>\n            {dishes.length > activeCountOfPostSets * 3 ? (\n                <ReadMoreButton />\n            ) : null}\n        </>\n    );\n    const noContent =\n        dishes.length > 0 ? null : (\n            <p className=\"dish__list-empty\">There are no recipes yet</p>\n        );\n\n    return (\n        <div className=\"dish__list\">{noContent ? noContent : <Content />}</div>\n    );\n};\n\nexport default DishList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"dish__select\">Please select a dish to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from '../skeleton/Skeleton';\n\nimport './dishInfo.scss';\n\nconst DishInfo = props => {\n    const { dish } = props;\n    const skeleton = dish.length > 0 ? null : <Skeleton />;\n    const content = dish.length > 0 ? <View dish={dish} /> : null;\n\n    return (\n        <div className=\"dish__info\">\n            {skeleton}\n\n            {content}\n        </div>\n    );\n};\n\nconst View = dish => {\n    const { name, description, moreDescription, thumb, ingridients } =\n        dish.dish[0];\n\n    return (\n        <>\n            <div className=\"dish__basics\">\n                <img src={thumb} alt={name} />\n                <div>\n                    <div className=\"dish__info-name\">{name}</div>\n                </div>\n            </div>\n            <div className=\"dish__descr\">\n                {description}\n                {moreDescription}\n            </div>\n            <div className=\"dish__comics\">Ingridients:</div>\n            <ul className=\"dish__comics-list\">\n                {ingridients.length > 0 ? (\n                    ingridients.map((item, idx) => {\n                        return (\n                            <li key={idx} className=\"dish__comics-item\">\n                                {idx + 1} {item}\n                            </li>\n                        );\n                    })\n                ) : (\n                    <p>There are no ingridients in this recipe</p>\n                )}\n            </ul>\n        </>\n    );\n};\n\nexport default DishInfo;\n","import { Component } from 'react';\r\nimport { ErrorMessage } from '../errorMessage/ErrorMessage';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log('[error]', error);\r\n        console.log('[errorInfo]', errorInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return (\r\n                <ErrorMessage/>\r\n            );\r\n        }\r\n        return this.props.children;\r\n        \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import './addDishButton.scss';\r\n\r\nconst AddDishButton = ({ setActive }) => {\r\n    return (\r\n        <button\r\n            className=\"addDishButton\"\r\n            onClick={() => {\r\n                return setActive(true);\r\n            }}\r\n        >\r\n            ADD\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AddDishButton;\r\n","export default __webpack_public_path__ + \"static/media/times-circle-regular.0f761569.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport icon from '../../resources/times-circle-regular.svg';\r\n\r\nimport decoration from '../../resources/img/img.jpg';\r\nimport './modalWindow.scss';\r\n\r\nexport const ModalWindow = ({ active, setActive, onAdd }) => {\r\n    const [newDish, setNewDish] = useState({\r\n        name: '',\r\n        description: '',\r\n        thumb: decoration,\r\n        ingridients: [],\r\n        id: uuidv4()\r\n    });\r\n    const [ingridient, setIngridient] = useState('');\r\n    const [lastIngridient, setLastIngridient] = useState(null);\r\n    const [valid, setValid] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (lastIngridient) {\r\n            onAdd(newDish);\r\n            setEmptyNewDish();\r\n        }\r\n    }, [lastIngridient]);\r\n\r\n    const setEmptyNewDish = () => {\r\n        setNewDish({\r\n            name: '',\r\n            description: '',\r\n            thumb: decoration,\r\n            ingridients: [],\r\n            id: uuidv4()\r\n        });\r\n    };\r\n\r\n    const handleSendClick = e => {\r\n        e.preventDefault();\r\n\r\n        if (validateField(newDish.name) && validateField(newDish.description)) {\r\n            succseecFullForm();\r\n        } else {\r\n            showErrorMassage();\r\n        }\r\n    };\r\n\r\n    const validateField = string => {\r\n        const reg = /[\\w ,.!:?'-]{3,500}$/g;\r\n        if (reg.test(string)) return true;\r\n        return false;\r\n    };\r\n\r\n    const showErrorMassage = () => {\r\n        setValid(false);\r\n    };\r\n\r\n    const succseecFullForm = () => {\r\n        setActive(false);\r\n        if (ingridient) {\r\n            setNewDish(prev => {\r\n                return {\r\n                    ...prev,\r\n\r\n                    ingridients: prev.ingridients.concat(ingridient)\r\n                };\r\n            });\r\n            setLastIngridient(true);\r\n            setIngridient('');\r\n        } else {\r\n            onAdd(newDish);\r\n            setEmptyNewDish();\r\n        }\r\n        setValid(true);\r\n    };\r\n    const handleAddIngridient = () => {\r\n        setNewDish(prev => {\r\n            return {\r\n                ...prev,\r\n\r\n                ingridients: prev.ingridients.concat(ingridient)\r\n            };\r\n        });\r\n\r\n        setIngridient('');\r\n    };\r\n    const onValueChange = e => {\r\n        setNewDish(prev => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n    };\r\n    const onIngridientChange = e => {\r\n        setIngridient(e.target.value);\r\n    };\r\n    const title = valid ? (\r\n        <h2>Add your own dish</h2>\r\n    ) : (\r\n        <h2>Your message should be no less than 3 symbols</h2>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={active ? 'modal active' : 'modal'}\r\n            onClick={() => setActive(false)}\r\n        >\r\n            <div\r\n                className={active ? 'modal__content active' : 'modal__content'}\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                {' '}\r\n                <button\r\n                    className=\"modal__close\"\r\n                    onClick={() => setActive(false)}\r\n                >\r\n                    <img\r\n                        className=\"modal__close-icon modal-cancel\"\r\n                        src={icon}\r\n                        alt=\"close modal window\"\r\n                    />\r\n                </button>\r\n                {title}\r\n                <form className=\"form\" action=\"url\">\r\n                    <input\r\n                        value={newDish.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter name of the dish\"\r\n                        required\r\n                        name=\"name\"\r\n                        onChange={onValueChange}\r\n                    />\r\n\r\n                    <div className=\"form__ingridient-wrapper\">\r\n                        <i\r\n                            onClick={handleAddIngridient}\r\n                            className=\"fas fa-plus form__icon\"\r\n                            alt=\"add more ingridients\"\r\n                        ></i>\r\n                        <input\r\n                            value={ingridient}\r\n                            onChange={onIngridientChange}\r\n                            className=\"dropdown__input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Add an ingridient\"\r\n                            name=\"ingridient\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__textarea-wrepper\">\r\n                        <label htmlFor=\"txt\">Description</label>\r\n                        <textarea\r\n                            value={newDish.description}\r\n                            name=\"description\"\r\n                            id=\"txt\"\r\n                            cols=\"30\"\r\n                            rows=\"10\"\r\n                            onChange={onValueChange}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"form__button-wrapper\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"button button__secondary\"\r\n                            onClick={handleSendClick}\r\n                        >\r\n                            <div className=\"inner\">Send</div>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { useState, useEffect } from 'react';\nimport AppHeader from '../appHeader/AppHeader';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport RandomDish from '../randomDish/RandomDish';\nimport DishList from '../dishList/DishList';\nimport DishInfo from '../dishInfo/DishInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport AddDishButton from '../addDishButton/AddDishButton';\nimport { ModalWindow } from '../modalWindow/ModalWindow';\n\nimport '../randomDish/randomDish.scss';\n\nconst App = () => {\n    let savedFavourite =\n        localStorage.getItem('favourite') !== null\n            ? JSON.parse(localStorage.getItem('favourite'))\n            : [];\n\n    const [selectedRecipie, setselectedRecipie] = useState([]);\n    const [favouriteDishes, setfavouriteDishes] = useState(savedFavourite);\n    const [modalActive, setModalActive] = useState(false);\n\n    useEffect(() => {\n        localStorage.setItem('favourite', JSON.stringify(favouriteDishes));\n    }, [favouriteDishes]);\n\n    const onDishSelected = id => {\n        setselectedRecipie(() => favouriteDishes.filter(el => el.id === id));\n    };\n\n    const addDish = ({ name, description, thumb, ingridients, id }) => {\n        const newItem = [\n            {\n                name,\n                description,\n                thumb,\n                ingridients,\n                id\n            }\n        ];\n\n        setfavouriteDishes(prevDish => [...prevDish, ...newItem]);\n    };\n    const deleteDish = id => {\n        setfavouriteDishes(prevDish => prevDish.filter(el => el.id !== id));\n    };\n\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <Routes>\n                        <Route\n                            path=\"/favourites\"\n                            element={\n                                <div className=\"dish__content\">\n                                    <ErrorBoundary>\n                                        <DishList\n                                            dishes={favouriteDishes}\n                                            onDelete={deleteDish}\n                                            onDishSelected={onDishSelected}\n                                        />\n                                    </ErrorBoundary>\n\n                                    <ErrorBoundary>\n                                        <DishInfo dish={selectedRecipie} />\n                                    </ErrorBoundary>\n                                    <AddDishButton setActive={setModalActive} />\n                                    <ModalWindow\n                                        active={modalActive}\n                                        setActive={setModalActive}\n                                        onAdd={addDish}\n                                    ></ModalWindow>\n                                </div>\n                            }\n                        />\n                        <Route\n                            path=\"*\"\n                            exact\n                            element={\n                                <div className=\"recipie__content\">\n                                    <ErrorBoundary>\n                                        <RandomDish onAdd={addDish} />\n                                    </ErrorBoundary>\n                                </div>\n                            }\n                        />\n                    </Routes>\n                </main>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}